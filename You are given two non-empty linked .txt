You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ans = 0;
        ListNode* head = 0;
        if(!l1 &&!l2) return l1;
        else if(!l1) return l2;
        else if(!l2) return l1;
        int carry = 0,sum=0;
        while((l1 || l2)){
            if(!l1){
                sum = l2->val;
                l2=l2->next;

            }
            else if(!l2){
                sum = l1->val;
                l1=l1->next;
            }
            else if(l1 && l2){
                sum = l1->val + l2->val;
                l1=l1->next,l2=l2->next;

            }
            
            
            if(sum>9&&sum!=0){
                if(!head){
                    ListNode* temp = new ListNode;
                    temp->val = sum%10;
                    carry = sum/10;
                    temp->next = 0;
                    head = temp;
                    ans = temp;
                }
                else {
                    ListNode* temp = new ListNode;
                    sum+=carry;
                    temp->val = sum%10;
                    carry = sum/10;
                    temp->next = 0;
                    ans->next = temp;
                    ans = ans->next;
                }
                 
            }
            else {
                if(!head){
                    ListNode* temp = new ListNode;
                    temp->val = sum;
                    carry = 0;
                    temp->next = 0;
                    head = temp;
                    ans = temp;
                }
                else {
                    ListNode* temp = new ListNode;
                    sum+=carry;
                    temp->val = sum%10;
                    carry = sum/10;
                    temp->next = 0;
                    ans->next = temp;
                    ans = ans->next;
                }
            }

        }
        if(carry){
                    ListNode* temp = new ListNode;
                    
                    temp->val = carry;
                    
                    temp->next = 0;
                    ans->next = temp;
                    ans = ans->next;            
        }
        return head;
        
    }
};